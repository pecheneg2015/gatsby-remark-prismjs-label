{
    type: 'root',
    children: [
      {
        type: 'heading',  
        depth: 2,
        children: [Array],
        position: [Position]
      },
      { type: 'paragraph', children: [Array], position: [Position] },
      {
        type: 'list',
        ordered: false,
        start: null,
        spread: false,
        children: [Array],
        position: [Position]
      },
      { type: 'paragraph', children: [Array], position: [Position] },
      {
        type: 'list',
        ordered: false,
        start: null,
        spread: false,
        children: [Array],
        position: [Position]
      },
      {
        type: 'heading',
        depth: 3,
        children: [Array],
        position: [Position]
      },
      { type: 'paragraph', children: [Array], position: [Position] },
      {
        type: 'list',
        ordered: false,
        start: null,
        spread: false,
        children: [Array],
        position: [Position]
      },
      { type: 'paragraph', children: [Array], position: [Position] },
      { type: 'paragraph', children: [Array], position: [Position] },
      {
        type: 'code',
        lang: 'json',
        meta: null,
        value: '{\n  "compilerOptions": {\n    ···\n    "allowJs": true\n  }\n}',
        position: [Position]
      },
      { type: 'paragraph', children: [Array], position: [Position] },
      {
        type: 'list',
        ordered: false,
        start: null,
        spread: false,
        children: [Array],
        position: [Position]
      },
      {
        type: 'heading',
        depth: 3,
        children: [Array],
        position: [Position]
      },
      { type: 'paragraph', children: [Array], position: [Position] },
      {
        type: 'list',
        ordered: false,
        start: null,
        spread: false,
        children: [Array],
        position: [Position]
      },
      { type: 'paragraph', children: [Array], position: [Position] },
      {
        type: 'code',
        lang: 'javascript',
        meta: null,
        value: '/**\n' +
          ' * @param {number} x - A number param.\n' +
          ' * @param {number} y - A number param.\n' +
          ' * @returns {number} This is the result\n' +
          ' */\n' +
          'function add(x, y) {\n' +
          '  return x + y;\n' +
          '}\n' +
          '/** @typedef {{ prop1: string, prop2: string, prop3?: number }} SpecialType */\n' +
          '/** @typedef {(data: string, index?: number) => boolean} Predicate */',
        position: [Position]
      },
      { type: 'paragraph', children: [Array], position: [Position] },
      {
        type: 'list',
        ordered: false,
        start: null,
        spread: false,
        children: [Array],
        position: [Position]
      },
      {
        type: 'heading',
        depth: 3,
        children: [Array],
        position: [Position]
      },
      { type: 'paragraph', children: [Array], position: [Position] },
      {
        type: 'list',
        ordered: false,
        start: null,
        spread: false,
        children: [Array],
        position: [Position]
      },
      {
        type: 'heading',
        depth: 3,
        children: [Array],
        position: [Position]
      },
      { type: 'paragraph', children: [Array], position: [Position] },
      {
        type: 'list',
        ordered: false,
        start: null,
        spread: false,
        children: [Array],
        position: [Position]
      },
      { type: 'blockquote', children: [Array], position: [Position] },
      {
        type: 'export',
        value: 'export const _frontmatter = {"title":"Стратегии миграции проекта на TypeScript","date":"2020-04-25T19:10:00.000Z","description":"В данной статье рассмотрены стратегии миграции существующей кодовой базы с  JavaScript  на  Typescript. "}',
        position: [Position]
      }
    ],
    position: {
      start: { line: 1, column: 1, offset: 0 },
      end: { line: 71, column: 236, offset: 4787 }
    }
  }
